{
	"name": "modlite",
	"scopeName": "source.modlite",

	"patterns": [
		{
			"include": "#expression"
		}
	],
	"repository": {
		"expression": {
			"patterns": [
				{
					"include": "#type"
				},

				{
					"include": "#line_comment"
				},
				{
					"include": "#block_comment"
				},
				{
					"include": "#keyword"
				},
				{
					"include": "#control_keyword"
				},
				{
					"include": "#operator"
				},
				{
					"include": "#single_quote_string"
				},
				{
					"include": "#double_quote_string"
				},
				{
					"include": "#bracket_expression"
				},
				{
					"include": "#paren_expression"
				}
			]
		},
		"type": {
			"match": "\\:\\s*([a-zA-Z]+)",
			"captures": {
				"1": {
					"name": "storage.type.modlite"
				}
			}
		},
		"line_comment": {
			"name": "comment.line.modlite",

			"begin": "//",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.comment.modlite"
				}
			},
			"end": "\n",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.comment.modlite"
				}
			}
		},
		"block_comment": {
			"name": "comment.block.modlite",

			"begin": "\/[*]",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.comment.modlite"
				}
			},
			"end": "[*](\/)",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.comment.modlite"
				}
			}
		},
		"keyword": {
			"name": "keyword.constant.modlite",
			"match": "\\b(true|false)\\b"
		},
		"control_keyword": {
			"name": "keyword.control.modlite",
			"match": "\\b(function|import|from|if|else|switch|while|as|class|var)\\b"
		},
		"operator": {
			"name": "keyword.operator.arithmetic.modlite",
			"match": "(\\+|\\-|\\*|\\/)"
		},
		"single_quote_string": {
			"name": "string.quoted.single.modlite",

			"begin": "'",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.modlite"
				}
			},
			"end": "'",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.modlite"
				}
			}
		},
		"double_quote_string": {
			"name": "string.quoted.double.modlite",

			"begin": "\"",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.modlite"
				}
			},
			"end": "\"",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.modlite"
				}
			}
		},
		"bracket_expression": {
			"name": "expression.bracket.group",
			
			"begin": "\\(",
			"end": "\\)",
			"beginCaptures": {
				"0": {
					"name": "punctuation.bracket.open"
				}
			},
			"endCaptures": {
				"0": {
					"name": "punctuation.bracket.close"
				}
			},
			"patterns": [
				{
					"include": "#expression"
				}
			]
		},
		"paren_expression": {
			"name": "expression.paren.group",
			
			"begin": "\\(",
			"end": "\\)",
			"beginCaptures": {
				"0": {
					"name": "punctuation.paren.open"
				}
			},
			"endCaptures": {
				"0": {
					"name": "punctuation.paren.close"
				}
			},
			"patterns": [
				{
					"include": "#expression"
				}
			]
		}
	}
}